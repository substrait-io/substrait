// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.3
// source: substrait/function.proto

package substraitpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FunctionSignature_FinalArgVariadic_ParameterConsistency int32

const (
	FunctionSignature_FinalArgVariadic_PARAMETER_CONSISTENCY_UNSPECIFIED FunctionSignature_FinalArgVariadic_ParameterConsistency = 0
	// All argument must be the same concrete type.
	FunctionSignature_FinalArgVariadic_PARAMETER_CONSISTENCY_CONSISTENT FunctionSignature_FinalArgVariadic_ParameterConsistency = 1
	// Each argument can be any possible concrete type afforded by the bounds
	// of any parameter defined in the arguments specification.
	FunctionSignature_FinalArgVariadic_PARAMETER_CONSISTENCY_INCONSISTENT FunctionSignature_FinalArgVariadic_ParameterConsistency = 2
)

// Enum value maps for FunctionSignature_FinalArgVariadic_ParameterConsistency.
var (
	FunctionSignature_FinalArgVariadic_ParameterConsistency_name = map[int32]string{
		0: "PARAMETER_CONSISTENCY_UNSPECIFIED",
		1: "PARAMETER_CONSISTENCY_CONSISTENT",
		2: "PARAMETER_CONSISTENCY_INCONSISTENT",
	}
	FunctionSignature_FinalArgVariadic_ParameterConsistency_value = map[string]int32{
		"PARAMETER_CONSISTENCY_UNSPECIFIED":  0,
		"PARAMETER_CONSISTENCY_CONSISTENT":   1,
		"PARAMETER_CONSISTENCY_INCONSISTENT": 2,
	}
)

func (x FunctionSignature_FinalArgVariadic_ParameterConsistency) Enum() *FunctionSignature_FinalArgVariadic_ParameterConsistency {
	p := new(FunctionSignature_FinalArgVariadic_ParameterConsistency)
	*p = x
	return p
}

func (x FunctionSignature_FinalArgVariadic_ParameterConsistency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FunctionSignature_FinalArgVariadic_ParameterConsistency) Descriptor() protoreflect.EnumDescriptor {
	return file_substrait_function_proto_enumTypes[0].Descriptor()
}

func (FunctionSignature_FinalArgVariadic_ParameterConsistency) Type() protoreflect.EnumType {
	return &file_substrait_function_proto_enumTypes[0]
}

func (x FunctionSignature_FinalArgVariadic_ParameterConsistency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FunctionSignature_FinalArgVariadic_ParameterConsistency.Descriptor instead.
func (FunctionSignature_FinalArgVariadic_ParameterConsistency) EnumDescriptor() ([]byte, []int) {
	return file_substrait_function_proto_rawDescGZIP(), []int{0, 0, 0}
}

type FunctionSignature_Window_WindowType int32

const (
	FunctionSignature_Window_WINDOW_TYPE_UNSPECIFIED FunctionSignature_Window_WindowType = 0
	FunctionSignature_Window_WINDOW_TYPE_STREAMING   FunctionSignature_Window_WindowType = 1
	FunctionSignature_Window_WINDOW_TYPE_PARTITION   FunctionSignature_Window_WindowType = 2
)

// Enum value maps for FunctionSignature_Window_WindowType.
var (
	FunctionSignature_Window_WindowType_name = map[int32]string{
		0: "WINDOW_TYPE_UNSPECIFIED",
		1: "WINDOW_TYPE_STREAMING",
		2: "WINDOW_TYPE_PARTITION",
	}
	FunctionSignature_Window_WindowType_value = map[string]int32{
		"WINDOW_TYPE_UNSPECIFIED": 0,
		"WINDOW_TYPE_STREAMING":   1,
		"WINDOW_TYPE_PARTITION":   2,
	}
)

func (x FunctionSignature_Window_WindowType) Enum() *FunctionSignature_Window_WindowType {
	p := new(FunctionSignature_Window_WindowType)
	*p = x
	return p
}

func (x FunctionSignature_Window_WindowType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FunctionSignature_Window_WindowType) Descriptor() protoreflect.EnumDescriptor {
	return file_substrait_function_proto_enumTypes[1].Descriptor()
}

func (FunctionSignature_Window_WindowType) Type() protoreflect.EnumType {
	return &file_substrait_function_proto_enumTypes[1]
}

func (x FunctionSignature_Window_WindowType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FunctionSignature_Window_WindowType.Descriptor instead.
func (FunctionSignature_Window_WindowType) EnumDescriptor() ([]byte, []int) {
	return file_substrait_function_proto_rawDescGZIP(), []int{0, 4, 0}
}

type FunctionSignature_Implementation_Type int32

const (
	FunctionSignature_Implementation_TYPE_UNSPECIFIED  FunctionSignature_Implementation_Type = 0
	FunctionSignature_Implementation_TYPE_WEB_ASSEMBLY FunctionSignature_Implementation_Type = 1
	FunctionSignature_Implementation_TYPE_TRINO_JAR    FunctionSignature_Implementation_Type = 2
)

// Enum value maps for FunctionSignature_Implementation_Type.
var (
	FunctionSignature_Implementation_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_WEB_ASSEMBLY",
		2: "TYPE_TRINO_JAR",
	}
	FunctionSignature_Implementation_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED":  0,
		"TYPE_WEB_ASSEMBLY": 1,
		"TYPE_TRINO_JAR":    2,
	}
)

func (x FunctionSignature_Implementation_Type) Enum() *FunctionSignature_Implementation_Type {
	p := new(FunctionSignature_Implementation_Type)
	*p = x
	return p
}

func (x FunctionSignature_Implementation_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FunctionSignature_Implementation_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_substrait_function_proto_enumTypes[2].Descriptor()
}

func (FunctionSignature_Implementation_Type) Type() protoreflect.EnumType {
	return &file_substrait_function_proto_enumTypes[2]
}

func (x FunctionSignature_Implementation_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FunctionSignature_Implementation_Type.Descriptor instead.
func (FunctionSignature_Implementation_Type) EnumDescriptor() ([]byte, []int) {
	return file_substrait_function_proto_rawDescGZIP(), []int{0, 6, 0}
}

// List of function signatures available.
type FunctionSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FunctionSignature) Reset() {
	*x = FunctionSignature{}
	mi := &file_substrait_function_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionSignature) ProtoMessage() {}

func (x *FunctionSignature) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_function_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionSignature.ProtoReflect.Descriptor instead.
func (*FunctionSignature) Descriptor() ([]byte, []int) {
	return file_substrait_function_proto_rawDescGZIP(), []int{0}
}

type FunctionSignature_FinalArgVariadic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the minimum number of arguments allowed for the list of final arguments
	// (inclusive).
	MinArgs int64 `protobuf:"varint,1,opt,name=min_args,json=minArgs,proto3" json:"min_args,omitempty"`
	// the maximum number of arguments allowed for the list of final arguments
	// (exclusive)
	MaxArgs int64 `protobuf:"varint,2,opt,name=max_args,json=maxArgs,proto3" json:"max_args,omitempty"`
	// the type of parameterized type consistency
	Consistency FunctionSignature_FinalArgVariadic_ParameterConsistency `protobuf:"varint,3,opt,name=consistency,proto3,enum=substrait.FunctionSignature_FinalArgVariadic_ParameterConsistency" json:"consistency,omitempty"`
}

func (x *FunctionSignature_FinalArgVariadic) Reset() {
	*x = FunctionSignature_FinalArgVariadic{}
	mi := &file_substrait_function_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionSignature_FinalArgVariadic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionSignature_FinalArgVariadic) ProtoMessage() {}

func (x *FunctionSignature_FinalArgVariadic) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_function_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionSignature_FinalArgVariadic.ProtoReflect.Descriptor instead.
func (*FunctionSignature_FinalArgVariadic) Descriptor() ([]byte, []int) {
	return file_substrait_function_proto_rawDescGZIP(), []int{0, 0}
}

func (x *FunctionSignature_FinalArgVariadic) GetMinArgs() int64 {
	if x != nil {
		return x.MinArgs
	}
	return 0
}

func (x *FunctionSignature_FinalArgVariadic) GetMaxArgs() int64 {
	if x != nil {
		return x.MaxArgs
	}
	return 0
}

func (x *FunctionSignature_FinalArgVariadic) GetConsistency() FunctionSignature_FinalArgVariadic_ParameterConsistency {
	if x != nil {
		return x.Consistency
	}
	return FunctionSignature_FinalArgVariadic_PARAMETER_CONSISTENCY_UNSPECIFIED
}

type FunctionSignature_FinalArgNormal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FunctionSignature_FinalArgNormal) Reset() {
	*x = FunctionSignature_FinalArgNormal{}
	mi := &file_substrait_function_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionSignature_FinalArgNormal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionSignature_FinalArgNormal) ProtoMessage() {}

func (x *FunctionSignature_FinalArgNormal) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_function_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionSignature_FinalArgNormal.ProtoReflect.Descriptor instead.
func (*FunctionSignature_FinalArgNormal) Descriptor() ([]byte, []int) {
	return file_substrait_function_proto_rawDescGZIP(), []int{0, 1}
}

type FunctionSignature_Scalar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arguments        []*FunctionSignature_Argument  `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty"`
	Name             []string                       `protobuf:"bytes,3,rep,name=name,proto3" json:"name,omitempty"`
	Description      *FunctionSignature_Description `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Deterministic    bool                           `protobuf:"varint,7,opt,name=deterministic,proto3" json:"deterministic,omitempty"`
	SessionDependent bool                           `protobuf:"varint,8,opt,name=session_dependent,json=sessionDependent,proto3" json:"session_dependent,omitempty"`
	OutputType       *DerivationExpression          `protobuf:"bytes,9,opt,name=output_type,json=outputType,proto3" json:"output_type,omitempty"`
	// Types that are assignable to FinalVariableBehavior:
	//
	//	*FunctionSignature_Scalar_Variadic
	//	*FunctionSignature_Scalar_Normal
	FinalVariableBehavior isFunctionSignature_Scalar_FinalVariableBehavior `protobuf_oneof:"final_variable_behavior"`
	Implementations       []*FunctionSignature_Implementation              `protobuf:"bytes,12,rep,name=implementations,proto3" json:"implementations,omitempty"`
}

func (x *FunctionSignature_Scalar) Reset() {
	*x = FunctionSignature_Scalar{}
	mi := &file_substrait_function_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionSignature_Scalar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionSignature_Scalar) ProtoMessage() {}

func (x *FunctionSignature_Scalar) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_function_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionSignature_Scalar.ProtoReflect.Descriptor instead.
func (*FunctionSignature_Scalar) Descriptor() ([]byte, []int) {
	return file_substrait_function_proto_rawDescGZIP(), []int{0, 2}
}

func (x *FunctionSignature_Scalar) GetArguments() []*FunctionSignature_Argument {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *FunctionSignature_Scalar) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *FunctionSignature_Scalar) GetDescription() *FunctionSignature_Description {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *FunctionSignature_Scalar) GetDeterministic() bool {
	if x != nil {
		return x.Deterministic
	}
	return false
}

func (x *FunctionSignature_Scalar) GetSessionDependent() bool {
	if x != nil {
		return x.SessionDependent
	}
	return false
}

func (x *FunctionSignature_Scalar) GetOutputType() *DerivationExpression {
	if x != nil {
		return x.OutputType
	}
	return nil
}

func (m *FunctionSignature_Scalar) GetFinalVariableBehavior() isFunctionSignature_Scalar_FinalVariableBehavior {
	if m != nil {
		return m.FinalVariableBehavior
	}
	return nil
}

func (x *FunctionSignature_Scalar) GetVariadic() *FunctionSignature_FinalArgVariadic {
	if x, ok := x.GetFinalVariableBehavior().(*FunctionSignature_Scalar_Variadic); ok {
		return x.Variadic
	}
	return nil
}

func (x *FunctionSignature_Scalar) GetNormal() *FunctionSignature_FinalArgNormal {
	if x, ok := x.GetFinalVariableBehavior().(*FunctionSignature_Scalar_Normal); ok {
		return x.Normal
	}
	return nil
}

func (x *FunctionSignature_Scalar) GetImplementations() []*FunctionSignature_Implementation {
	if x != nil {
		return x.Implementations
	}
	return nil
}

type isFunctionSignature_Scalar_FinalVariableBehavior interface {
	isFunctionSignature_Scalar_FinalVariableBehavior()
}

type FunctionSignature_Scalar_Variadic struct {
	Variadic *FunctionSignature_FinalArgVariadic `protobuf:"bytes,10,opt,name=variadic,proto3,oneof"`
}

type FunctionSignature_Scalar_Normal struct {
	Normal *FunctionSignature_FinalArgNormal `protobuf:"bytes,11,opt,name=normal,proto3,oneof"`
}

func (*FunctionSignature_Scalar_Variadic) isFunctionSignature_Scalar_FinalVariableBehavior() {}

func (*FunctionSignature_Scalar_Normal) isFunctionSignature_Scalar_FinalVariableBehavior() {}

type FunctionSignature_Aggregate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arguments        []*FunctionSignature_Argument  `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty"`
	Name             string                         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description      *FunctionSignature_Description `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Deterministic    bool                           `protobuf:"varint,7,opt,name=deterministic,proto3" json:"deterministic,omitempty"`
	SessionDependent bool                           `protobuf:"varint,8,opt,name=session_dependent,json=sessionDependent,proto3" json:"session_dependent,omitempty"`
	OutputType       *DerivationExpression          `protobuf:"bytes,9,opt,name=output_type,json=outputType,proto3" json:"output_type,omitempty"`
	// Types that are assignable to FinalVariableBehavior:
	//
	//	*FunctionSignature_Aggregate_Variadic
	//	*FunctionSignature_Aggregate_Normal
	FinalVariableBehavior isFunctionSignature_Aggregate_FinalVariableBehavior `protobuf_oneof:"final_variable_behavior"`
	Ordered               bool                                                `protobuf:"varint,14,opt,name=ordered,proto3" json:"ordered,omitempty"`
	MaxSet                uint64                                              `protobuf:"varint,12,opt,name=max_set,json=maxSet,proto3" json:"max_set,omitempty"`
	IntermediateType      *Type                                               `protobuf:"bytes,13,opt,name=intermediate_type,json=intermediateType,proto3" json:"intermediate_type,omitempty"`
	Implementations       []*FunctionSignature_Implementation                 `protobuf:"bytes,15,rep,name=implementations,proto3" json:"implementations,omitempty"`
}

func (x *FunctionSignature_Aggregate) Reset() {
	*x = FunctionSignature_Aggregate{}
	mi := &file_substrait_function_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionSignature_Aggregate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionSignature_Aggregate) ProtoMessage() {}

func (x *FunctionSignature_Aggregate) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_function_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionSignature_Aggregate.ProtoReflect.Descriptor instead.
func (*FunctionSignature_Aggregate) Descriptor() ([]byte, []int) {
	return file_substrait_function_proto_rawDescGZIP(), []int{0, 3}
}

func (x *FunctionSignature_Aggregate) GetArguments() []*FunctionSignature_Argument {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *FunctionSignature_Aggregate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FunctionSignature_Aggregate) GetDescription() *FunctionSignature_Description {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *FunctionSignature_Aggregate) GetDeterministic() bool {
	if x != nil {
		return x.Deterministic
	}
	return false
}

func (x *FunctionSignature_Aggregate) GetSessionDependent() bool {
	if x != nil {
		return x.SessionDependent
	}
	return false
}

func (x *FunctionSignature_Aggregate) GetOutputType() *DerivationExpression {
	if x != nil {
		return x.OutputType
	}
	return nil
}

func (m *FunctionSignature_Aggregate) GetFinalVariableBehavior() isFunctionSignature_Aggregate_FinalVariableBehavior {
	if m != nil {
		return m.FinalVariableBehavior
	}
	return nil
}

func (x *FunctionSignature_Aggregate) GetVariadic() *FunctionSignature_FinalArgVariadic {
	if x, ok := x.GetFinalVariableBehavior().(*FunctionSignature_Aggregate_Variadic); ok {
		return x.Variadic
	}
	return nil
}

func (x *FunctionSignature_Aggregate) GetNormal() *FunctionSignature_FinalArgNormal {
	if x, ok := x.GetFinalVariableBehavior().(*FunctionSignature_Aggregate_Normal); ok {
		return x.Normal
	}
	return nil
}

func (x *FunctionSignature_Aggregate) GetOrdered() bool {
	if x != nil {
		return x.Ordered
	}
	return false
}

func (x *FunctionSignature_Aggregate) GetMaxSet() uint64 {
	if x != nil {
		return x.MaxSet
	}
	return 0
}

func (x *FunctionSignature_Aggregate) GetIntermediateType() *Type {
	if x != nil {
		return x.IntermediateType
	}
	return nil
}

func (x *FunctionSignature_Aggregate) GetImplementations() []*FunctionSignature_Implementation {
	if x != nil {
		return x.Implementations
	}
	return nil
}

type isFunctionSignature_Aggregate_FinalVariableBehavior interface {
	isFunctionSignature_Aggregate_FinalVariableBehavior()
}

type FunctionSignature_Aggregate_Variadic struct {
	Variadic *FunctionSignature_FinalArgVariadic `protobuf:"bytes,10,opt,name=variadic,proto3,oneof"`
}

type FunctionSignature_Aggregate_Normal struct {
	Normal *FunctionSignature_FinalArgNormal `protobuf:"bytes,11,opt,name=normal,proto3,oneof"`
}

func (*FunctionSignature_Aggregate_Variadic) isFunctionSignature_Aggregate_FinalVariableBehavior() {}

func (*FunctionSignature_Aggregate_Normal) isFunctionSignature_Aggregate_FinalVariableBehavior() {}

type FunctionSignature_Window struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arguments        []*FunctionSignature_Argument  `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty"`
	Name             []string                       `protobuf:"bytes,3,rep,name=name,proto3" json:"name,omitempty"`
	Description      *FunctionSignature_Description `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Deterministic    bool                           `protobuf:"varint,7,opt,name=deterministic,proto3" json:"deterministic,omitempty"`
	SessionDependent bool                           `protobuf:"varint,8,opt,name=session_dependent,json=sessionDependent,proto3" json:"session_dependent,omitempty"`
	IntermediateType *DerivationExpression          `protobuf:"bytes,9,opt,name=intermediate_type,json=intermediateType,proto3" json:"intermediate_type,omitempty"`
	OutputType       *DerivationExpression          `protobuf:"bytes,10,opt,name=output_type,json=outputType,proto3" json:"output_type,omitempty"`
	// Types that are assignable to FinalVariableBehavior:
	//
	//	*FunctionSignature_Window_Variadic
	//	*FunctionSignature_Window_Normal
	FinalVariableBehavior isFunctionSignature_Window_FinalVariableBehavior `protobuf_oneof:"final_variable_behavior"`
	Ordered               bool                                             `protobuf:"varint,11,opt,name=ordered,proto3" json:"ordered,omitempty"`
	MaxSet                uint64                                           `protobuf:"varint,12,opt,name=max_set,json=maxSet,proto3" json:"max_set,omitempty"`
	WindowType            FunctionSignature_Window_WindowType              `protobuf:"varint,14,opt,name=window_type,json=windowType,proto3,enum=substrait.FunctionSignature_Window_WindowType" json:"window_type,omitempty"`
	Implementations       []*FunctionSignature_Implementation              `protobuf:"bytes,15,rep,name=implementations,proto3" json:"implementations,omitempty"`
}

func (x *FunctionSignature_Window) Reset() {
	*x = FunctionSignature_Window{}
	mi := &file_substrait_function_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionSignature_Window) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionSignature_Window) ProtoMessage() {}

func (x *FunctionSignature_Window) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_function_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionSignature_Window.ProtoReflect.Descriptor instead.
func (*FunctionSignature_Window) Descriptor() ([]byte, []int) {
	return file_substrait_function_proto_rawDescGZIP(), []int{0, 4}
}

func (x *FunctionSignature_Window) GetArguments() []*FunctionSignature_Argument {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *FunctionSignature_Window) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *FunctionSignature_Window) GetDescription() *FunctionSignature_Description {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *FunctionSignature_Window) GetDeterministic() bool {
	if x != nil {
		return x.Deterministic
	}
	return false
}

func (x *FunctionSignature_Window) GetSessionDependent() bool {
	if x != nil {
		return x.SessionDependent
	}
	return false
}

func (x *FunctionSignature_Window) GetIntermediateType() *DerivationExpression {
	if x != nil {
		return x.IntermediateType
	}
	return nil
}

func (x *FunctionSignature_Window) GetOutputType() *DerivationExpression {
	if x != nil {
		return x.OutputType
	}
	return nil
}

func (m *FunctionSignature_Window) GetFinalVariableBehavior() isFunctionSignature_Window_FinalVariableBehavior {
	if m != nil {
		return m.FinalVariableBehavior
	}
	return nil
}

func (x *FunctionSignature_Window) GetVariadic() *FunctionSignature_FinalArgVariadic {
	if x, ok := x.GetFinalVariableBehavior().(*FunctionSignature_Window_Variadic); ok {
		return x.Variadic
	}
	return nil
}

func (x *FunctionSignature_Window) GetNormal() *FunctionSignature_FinalArgNormal {
	if x, ok := x.GetFinalVariableBehavior().(*FunctionSignature_Window_Normal); ok {
		return x.Normal
	}
	return nil
}

func (x *FunctionSignature_Window) GetOrdered() bool {
	if x != nil {
		return x.Ordered
	}
	return false
}

func (x *FunctionSignature_Window) GetMaxSet() uint64 {
	if x != nil {
		return x.MaxSet
	}
	return 0
}

func (x *FunctionSignature_Window) GetWindowType() FunctionSignature_Window_WindowType {
	if x != nil {
		return x.WindowType
	}
	return FunctionSignature_Window_WINDOW_TYPE_UNSPECIFIED
}

func (x *FunctionSignature_Window) GetImplementations() []*FunctionSignature_Implementation {
	if x != nil {
		return x.Implementations
	}
	return nil
}

type isFunctionSignature_Window_FinalVariableBehavior interface {
	isFunctionSignature_Window_FinalVariableBehavior()
}

type FunctionSignature_Window_Variadic struct {
	Variadic *FunctionSignature_FinalArgVariadic `protobuf:"bytes,16,opt,name=variadic,proto3,oneof"`
}

type FunctionSignature_Window_Normal struct {
	Normal *FunctionSignature_FinalArgNormal `protobuf:"bytes,17,opt,name=normal,proto3,oneof"`
}

func (*FunctionSignature_Window_Variadic) isFunctionSignature_Window_FinalVariableBehavior() {}

func (*FunctionSignature_Window_Normal) isFunctionSignature_Window_FinalVariableBehavior() {}

type FunctionSignature_Description struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Body     string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *FunctionSignature_Description) Reset() {
	*x = FunctionSignature_Description{}
	mi := &file_substrait_function_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionSignature_Description) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionSignature_Description) ProtoMessage() {}

func (x *FunctionSignature_Description) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_function_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionSignature_Description.ProtoReflect.Descriptor instead.
func (*FunctionSignature_Description) Descriptor() ([]byte, []int) {
	return file_substrait_function_proto_rawDescGZIP(), []int{0, 5}
}

func (x *FunctionSignature_Description) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *FunctionSignature_Description) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type FunctionSignature_Implementation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type FunctionSignature_Implementation_Type `protobuf:"varint,1,opt,name=type,proto3,enum=substrait.FunctionSignature_Implementation_Type" json:"type,omitempty"`
	Uri  string                                `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *FunctionSignature_Implementation) Reset() {
	*x = FunctionSignature_Implementation{}
	mi := &file_substrait_function_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionSignature_Implementation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionSignature_Implementation) ProtoMessage() {}

func (x *FunctionSignature_Implementation) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_function_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionSignature_Implementation.ProtoReflect.Descriptor instead.
func (*FunctionSignature_Implementation) Descriptor() ([]byte, []int) {
	return file_substrait_function_proto_rawDescGZIP(), []int{0, 6}
}

func (x *FunctionSignature_Implementation) GetType() FunctionSignature_Implementation_Type {
	if x != nil {
		return x.Type
	}
	return FunctionSignature_Implementation_TYPE_UNSPECIFIED
}

func (x *FunctionSignature_Implementation) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type FunctionSignature_Argument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to ArgumentKind:
	//
	//	*FunctionSignature_Argument_Value
	//	*FunctionSignature_Argument_Type
	//	*FunctionSignature_Argument_Enum
	ArgumentKind isFunctionSignature_Argument_ArgumentKind `protobuf_oneof:"argument_kind"`
}

func (x *FunctionSignature_Argument) Reset() {
	*x = FunctionSignature_Argument{}
	mi := &file_substrait_function_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionSignature_Argument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionSignature_Argument) ProtoMessage() {}

func (x *FunctionSignature_Argument) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_function_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionSignature_Argument.ProtoReflect.Descriptor instead.
func (*FunctionSignature_Argument) Descriptor() ([]byte, []int) {
	return file_substrait_function_proto_rawDescGZIP(), []int{0, 7}
}

func (x *FunctionSignature_Argument) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *FunctionSignature_Argument) GetArgumentKind() isFunctionSignature_Argument_ArgumentKind {
	if m != nil {
		return m.ArgumentKind
	}
	return nil
}

func (x *FunctionSignature_Argument) GetValue() *FunctionSignature_Argument_ValueArgument {
	if x, ok := x.GetArgumentKind().(*FunctionSignature_Argument_Value); ok {
		return x.Value
	}
	return nil
}

func (x *FunctionSignature_Argument) GetType() *FunctionSignature_Argument_TypeArgument {
	if x, ok := x.GetArgumentKind().(*FunctionSignature_Argument_Type); ok {
		return x.Type
	}
	return nil
}

func (x *FunctionSignature_Argument) GetEnum() *FunctionSignature_Argument_EnumArgument {
	if x, ok := x.GetArgumentKind().(*FunctionSignature_Argument_Enum); ok {
		return x.Enum
	}
	return nil
}

type isFunctionSignature_Argument_ArgumentKind interface {
	isFunctionSignature_Argument_ArgumentKind()
}

type FunctionSignature_Argument_Value struct {
	Value *FunctionSignature_Argument_ValueArgument `protobuf:"bytes,2,opt,name=value,proto3,oneof"`
}

type FunctionSignature_Argument_Type struct {
	Type *FunctionSignature_Argument_TypeArgument `protobuf:"bytes,3,opt,name=type,proto3,oneof"`
}

type FunctionSignature_Argument_Enum struct {
	Enum *FunctionSignature_Argument_EnumArgument `protobuf:"bytes,4,opt,name=enum,proto3,oneof"`
}

func (*FunctionSignature_Argument_Value) isFunctionSignature_Argument_ArgumentKind() {}

func (*FunctionSignature_Argument_Type) isFunctionSignature_Argument_ArgumentKind() {}

func (*FunctionSignature_Argument_Enum) isFunctionSignature_Argument_ArgumentKind() {}

type FunctionSignature_Argument_ValueArgument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     *ParameterizedType `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Constant bool               `protobuf:"varint,2,opt,name=constant,proto3" json:"constant,omitempty"`
}

func (x *FunctionSignature_Argument_ValueArgument) Reset() {
	*x = FunctionSignature_Argument_ValueArgument{}
	mi := &file_substrait_function_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionSignature_Argument_ValueArgument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionSignature_Argument_ValueArgument) ProtoMessage() {}

func (x *FunctionSignature_Argument_ValueArgument) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_function_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionSignature_Argument_ValueArgument.ProtoReflect.Descriptor instead.
func (*FunctionSignature_Argument_ValueArgument) Descriptor() ([]byte, []int) {
	return file_substrait_function_proto_rawDescGZIP(), []int{0, 7, 0}
}

func (x *FunctionSignature_Argument_ValueArgument) GetType() *ParameterizedType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *FunctionSignature_Argument_ValueArgument) GetConstant() bool {
	if x != nil {
		return x.Constant
	}
	return false
}

type FunctionSignature_Argument_TypeArgument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *ParameterizedType `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *FunctionSignature_Argument_TypeArgument) Reset() {
	*x = FunctionSignature_Argument_TypeArgument{}
	mi := &file_substrait_function_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionSignature_Argument_TypeArgument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionSignature_Argument_TypeArgument) ProtoMessage() {}

func (x *FunctionSignature_Argument_TypeArgument) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_function_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionSignature_Argument_TypeArgument.ProtoReflect.Descriptor instead.
func (*FunctionSignature_Argument_TypeArgument) Descriptor() ([]byte, []int) {
	return file_substrait_function_proto_rawDescGZIP(), []int{0, 7, 1}
}

func (x *FunctionSignature_Argument_TypeArgument) GetType() *ParameterizedType {
	if x != nil {
		return x.Type
	}
	return nil
}

type FunctionSignature_Argument_EnumArgument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options  []string `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	Optional bool     `protobuf:"varint,2,opt,name=optional,proto3" json:"optional,omitempty"`
}

func (x *FunctionSignature_Argument_EnumArgument) Reset() {
	*x = FunctionSignature_Argument_EnumArgument{}
	mi := &file_substrait_function_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionSignature_Argument_EnumArgument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionSignature_Argument_EnumArgument) ProtoMessage() {}

func (x *FunctionSignature_Argument_EnumArgument) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_function_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionSignature_Argument_EnumArgument.ProtoReflect.Descriptor instead.
func (*FunctionSignature_Argument_EnumArgument) Descriptor() ([]byte, []int) {
	return file_substrait_function_proto_rawDescGZIP(), []int{0, 7, 2}
}

func (x *FunctionSignature_Argument_EnumArgument) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *FunctionSignature_Argument_EnumArgument) GetOptional() bool {
	if x != nil {
		return x.Optional
	}
	return false
}

var File_substrait_function_proto protoreflect.FileDescriptor

var file_substrait_function_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2f, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x75, 0x62, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x74, 0x1a, 0x23, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74,
	0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x73, 0x75, 0x62, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xd9, 0x19, 0x0a, 0x11, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0xbc, 0x02, 0x0a, 0x10, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x41, 0x72, 0x67, 0x56, 0x61, 0x72, 0x69, 0x61, 0x64, 0x69, 0x63, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6d, 0x69, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f,
	0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x41,
	0x72, 0x67, 0x73, 0x12, 0x64, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x72, 0x67, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x64, 0x69, 0x63, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x8b, 0x01, 0x0a, 0x14, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x25, 0x0a, 0x21, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f,
	0x43, 0x4f, 0x4e, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e,
	0x43, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12,
	0x26, 0x0a, 0x22, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e,
	0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x49, 0x4e, 0x43, 0x4f, 0x4e, 0x53, 0x49,
	0x53, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x1a, 0x10, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x41, 0x72, 0x67, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x1a, 0xc8, 0x04, 0x0a, 0x06, 0x53, 0x63,
	0x61, 0x6c, 0x61, 0x72, 0x12, 0x43, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09,
	0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12,
	0x2b, 0x0a, 0x11, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0b,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x44, 0x65,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4b,
	0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x64, 0x69, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x41, 0x72, 0x67, 0x56, 0x61, 0x72, 0x69, 0x61, 0x64, 0x69, 0x63, 0x48,
	0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x64, 0x69, 0x63, 0x12, 0x45, 0x0a, 0x06, 0x6e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x41,
	0x72, 0x67, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x6f, 0x72, 0x6d,
	0x61, 0x6c, 0x12, 0x55, 0x0a, 0x0f, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x19, 0x0a, 0x17, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x62, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x1a, 0xbc, 0x05, 0x0a, 0x09, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x12, 0x43, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x74, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x61, 0x72,
	0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x2b, 0x0a,
	0x11, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0b, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x44, 0x65, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4b, 0x0a, 0x08,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x64, 0x69, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x41, 0x72, 0x67, 0x56, 0x61, 0x72, 0x69, 0x61, 0x64, 0x69, 0x63, 0x48, 0x00, 0x52,
	0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x64, 0x69, 0x63, 0x12, 0x45, 0x0a, 0x06, 0x6e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x75, 0x62, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x72, 0x67,
	0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61,
	0x78, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x61, 0x78,
	0x53, 0x65, 0x74, 0x12, 0x3c, 0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x55, 0x0a, 0x0f, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x75, 0x62,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x19, 0x0a, 0x17, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x1a, 0xfb, 0x06, 0x0a, 0x06, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x43,
	0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x64, 0x65, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x44, 0x65,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x75, 0x62, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x64,
	0x69, 0x63, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x72, 0x67, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x64, 0x69, 0x63, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x64, 0x69, 0x63, 0x12, 0x45, 0x0a, 0x06, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x72, 0x67, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x48, 0x00, 0x52, 0x06, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x65, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x74, 0x12, 0x4f, 0x0a,
	0x0b, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x55,
	0x0a, 0x0f, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5f, 0x0a, 0x0a, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x19, 0x0a, 0x15, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x57,
	0x49, 0x4e, 0x44, 0x4f, 0x57, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x42, 0x19, 0x0a, 0x17, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x1a, 0x3d, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x1a, 0xb1, 0x01, 0x0a, 0x0e, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x30, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x47, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x57, 0x45, 0x42, 0x5f, 0x41, 0x53, 0x53, 0x45, 0x4d, 0x42, 0x4c, 0x59, 0x10, 0x01,
	0x12, 0x12, 0x0a, 0x0e, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x52, 0x49, 0x4e, 0x4f, 0x5f, 0x4a,
	0x41, 0x52, 0x10, 0x02, 0x1a, 0xf7, 0x03, 0x0a, 0x08, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74,
	0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x48, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x41, 0x72, 0x67, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a, 0x04,
	0x65, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x75, 0x62,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x1a, 0x5d, 0x0a, 0x0d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x41,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x1a, 0x40, 0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65, 0x41, 0x72, 0x67,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x44, 0x0a, 0x0c, 0x45, 0x6e, 0x75, 0x6d, 0x41,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x0f, 0x0a,
	0x0d, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x42, 0x66,
	0x0a, 0x12, 0x69, 0x6f, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2d, 0x69, 0x6f, 0x2f,
	0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x70,
	0x62, 0xaa, 0x02, 0x12, 0x53, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_substrait_function_proto_rawDescOnce sync.Once
	file_substrait_function_proto_rawDescData = file_substrait_function_proto_rawDesc
)

func file_substrait_function_proto_rawDescGZIP() []byte {
	file_substrait_function_proto_rawDescOnce.Do(func() {
		file_substrait_function_proto_rawDescData = protoimpl.X.CompressGZIP(file_substrait_function_proto_rawDescData)
	})
	return file_substrait_function_proto_rawDescData
}

var file_substrait_function_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_substrait_function_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_substrait_function_proto_goTypes = []any{
	(FunctionSignature_FinalArgVariadic_ParameterConsistency)(0), // 0: substrait.FunctionSignature.FinalArgVariadic.ParameterConsistency
	(FunctionSignature_Window_WindowType)(0),                     // 1: substrait.FunctionSignature.Window.WindowType
	(FunctionSignature_Implementation_Type)(0),                   // 2: substrait.FunctionSignature.Implementation.Type
	(*FunctionSignature)(nil),                                    // 3: substrait.FunctionSignature
	(*FunctionSignature_FinalArgVariadic)(nil),                   // 4: substrait.FunctionSignature.FinalArgVariadic
	(*FunctionSignature_FinalArgNormal)(nil),                     // 5: substrait.FunctionSignature.FinalArgNormal
	(*FunctionSignature_Scalar)(nil),                             // 6: substrait.FunctionSignature.Scalar
	(*FunctionSignature_Aggregate)(nil),                          // 7: substrait.FunctionSignature.Aggregate
	(*FunctionSignature_Window)(nil),                             // 8: substrait.FunctionSignature.Window
	(*FunctionSignature_Description)(nil),                        // 9: substrait.FunctionSignature.Description
	(*FunctionSignature_Implementation)(nil),                     // 10: substrait.FunctionSignature.Implementation
	(*FunctionSignature_Argument)(nil),                           // 11: substrait.FunctionSignature.Argument
	(*FunctionSignature_Argument_ValueArgument)(nil),             // 12: substrait.FunctionSignature.Argument.ValueArgument
	(*FunctionSignature_Argument_TypeArgument)(nil),              // 13: substrait.FunctionSignature.Argument.TypeArgument
	(*FunctionSignature_Argument_EnumArgument)(nil),              // 14: substrait.FunctionSignature.Argument.EnumArgument
	(*DerivationExpression)(nil),                                 // 15: substrait.DerivationExpression
	(*Type)(nil),                                                 // 16: substrait.Type
	(*ParameterizedType)(nil),                                    // 17: substrait.ParameterizedType
}
var file_substrait_function_proto_depIdxs = []int32{
	0,  // 0: substrait.FunctionSignature.FinalArgVariadic.consistency:type_name -> substrait.FunctionSignature.FinalArgVariadic.ParameterConsistency
	11, // 1: substrait.FunctionSignature.Scalar.arguments:type_name -> substrait.FunctionSignature.Argument
	9,  // 2: substrait.FunctionSignature.Scalar.description:type_name -> substrait.FunctionSignature.Description
	15, // 3: substrait.FunctionSignature.Scalar.output_type:type_name -> substrait.DerivationExpression
	4,  // 4: substrait.FunctionSignature.Scalar.variadic:type_name -> substrait.FunctionSignature.FinalArgVariadic
	5,  // 5: substrait.FunctionSignature.Scalar.normal:type_name -> substrait.FunctionSignature.FinalArgNormal
	10, // 6: substrait.FunctionSignature.Scalar.implementations:type_name -> substrait.FunctionSignature.Implementation
	11, // 7: substrait.FunctionSignature.Aggregate.arguments:type_name -> substrait.FunctionSignature.Argument
	9,  // 8: substrait.FunctionSignature.Aggregate.description:type_name -> substrait.FunctionSignature.Description
	15, // 9: substrait.FunctionSignature.Aggregate.output_type:type_name -> substrait.DerivationExpression
	4,  // 10: substrait.FunctionSignature.Aggregate.variadic:type_name -> substrait.FunctionSignature.FinalArgVariadic
	5,  // 11: substrait.FunctionSignature.Aggregate.normal:type_name -> substrait.FunctionSignature.FinalArgNormal
	16, // 12: substrait.FunctionSignature.Aggregate.intermediate_type:type_name -> substrait.Type
	10, // 13: substrait.FunctionSignature.Aggregate.implementations:type_name -> substrait.FunctionSignature.Implementation
	11, // 14: substrait.FunctionSignature.Window.arguments:type_name -> substrait.FunctionSignature.Argument
	9,  // 15: substrait.FunctionSignature.Window.description:type_name -> substrait.FunctionSignature.Description
	15, // 16: substrait.FunctionSignature.Window.intermediate_type:type_name -> substrait.DerivationExpression
	15, // 17: substrait.FunctionSignature.Window.output_type:type_name -> substrait.DerivationExpression
	4,  // 18: substrait.FunctionSignature.Window.variadic:type_name -> substrait.FunctionSignature.FinalArgVariadic
	5,  // 19: substrait.FunctionSignature.Window.normal:type_name -> substrait.FunctionSignature.FinalArgNormal
	1,  // 20: substrait.FunctionSignature.Window.window_type:type_name -> substrait.FunctionSignature.Window.WindowType
	10, // 21: substrait.FunctionSignature.Window.implementations:type_name -> substrait.FunctionSignature.Implementation
	2,  // 22: substrait.FunctionSignature.Implementation.type:type_name -> substrait.FunctionSignature.Implementation.Type
	12, // 23: substrait.FunctionSignature.Argument.value:type_name -> substrait.FunctionSignature.Argument.ValueArgument
	13, // 24: substrait.FunctionSignature.Argument.type:type_name -> substrait.FunctionSignature.Argument.TypeArgument
	14, // 25: substrait.FunctionSignature.Argument.enum:type_name -> substrait.FunctionSignature.Argument.EnumArgument
	17, // 26: substrait.FunctionSignature.Argument.ValueArgument.type:type_name -> substrait.ParameterizedType
	17, // 27: substrait.FunctionSignature.Argument.TypeArgument.type:type_name -> substrait.ParameterizedType
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_substrait_function_proto_init() }
func file_substrait_function_proto_init() {
	if File_substrait_function_proto != nil {
		return
	}
	file_substrait_parameterized_types_proto_init()
	file_substrait_type_proto_init()
	file_substrait_type_expressions_proto_init()
	file_substrait_function_proto_msgTypes[3].OneofWrappers = []any{
		(*FunctionSignature_Scalar_Variadic)(nil),
		(*FunctionSignature_Scalar_Normal)(nil),
	}
	file_substrait_function_proto_msgTypes[4].OneofWrappers = []any{
		(*FunctionSignature_Aggregate_Variadic)(nil),
		(*FunctionSignature_Aggregate_Normal)(nil),
	}
	file_substrait_function_proto_msgTypes[5].OneofWrappers = []any{
		(*FunctionSignature_Window_Variadic)(nil),
		(*FunctionSignature_Window_Normal)(nil),
	}
	file_substrait_function_proto_msgTypes[8].OneofWrappers = []any{
		(*FunctionSignature_Argument_Value)(nil),
		(*FunctionSignature_Argument_Type)(nil),
		(*FunctionSignature_Argument_Enum)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_substrait_function_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_substrait_function_proto_goTypes,
		DependencyIndexes: file_substrait_function_proto_depIdxs,
		EnumInfos:         file_substrait_function_proto_enumTypes,
		MessageInfos:      file_substrait_function_proto_msgTypes,
	}.Build()
	File_substrait_function_proto = out.File
	file_substrait_function_proto_rawDesc = nil
	file_substrait_function_proto_goTypes = nil
	file_substrait_function_proto_depIdxs = nil
}
